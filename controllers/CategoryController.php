<?php


namespace app\controllers;


use app\base\BaseController;
use app\models\CategoryActivities;
use app\models\CategoryWork;
use app\models\Images;
use yii\data\ActiveDataProvider;
use yii\filters\PageCache;
use yii\helpers\ArrayHelper;
use yii\web\HttpException;

class CategoryController extends BaseController
{

    public function behaviors()
    {
        return [

            'statistics' => [
                'class' => \Klisl\Statistics\AddStatistics::class,
                'actions' => ['index', 'view','price','rent','rentView'],
            ],
            ['class'=>PageCache::class,'duration' => 60]
        ];
    }

    public function actions()
    {
        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $model = CategoryActivities::find()->andWhere(['addCategory' => true])->orderBy('position')->all();
        return $this->render('index', ['model' => $model]);
    }

    public function actionView()
    {
        $id = \Yii::$app->request->get('category_id');
        $model = Images::find()
            ->leftJoin('activities', 'images.activity_id=activities.id')
            ->andWhere(['activities.category_id' => $id])->all();
        return $this->render('view', ['model' => $model]);
    }

    public function actionPrice()
    {
        $query = CategoryActivities::find()->andWhere('position < 10');
        $model = new ActiveDataProvider([
            'query' => $query,
            'sort' => [
                'defaultOrder' => [
                    'position' => SORT_ASC
                ]
            ]
        ]);
        return $this->render('price', ['model' => $model]);
    }

    public function actionRent()
    {
        $query = CategoryActivities::find()->andWhere('position >= 10 and position < 20');
        $model = new ActiveDataProvider([
            'query' => $query,
            'sort' => [
                'defaultOrder' => [
                    'position' => SORT_ASC
                ]
            ]
        ]);
        return $this->render('rent', ['model' => $model]);
    }

    public function actionRentView()
    {
        $id = \Yii::$app->request->get('category_id');
        $model = CategoryActivities::findOne($id);
        $images = Images::find()
            ->leftJoin('activities', 'images.activity_id=activities.id')
            ->leftJoin('category_activities', 'activities.category_id=category_activities.id')
            ->andWhere(['category_activities.title' => 'Студия'])->all();
        return $this->render('view-rent', ['model' => $model, 'images' => $images]);
    }
}